alert("Fala tu, cupinxa, bora jogar Robox? Antes de tudo, aqui estão as instruções:\n1- você pode mover o robô (R) para cima (usando W ou 8), para baixo(usando S ou 2), para a direita(usando D ou 6) e para a esquerda (usando A ou 4);\n2- O seu objetivo é empurrar todas as caixas (C) para suas posições marcadas (P); \n3- Você não pode mover mais de uma caixa ao mesmo tempo; \n4- Você perde quando não há mais movimentos possíveis.\n5 - Caso queira reiniciar o jogo tecle ENTER\n6 - Caso queira desistir/sair do jogo digite SAIR.\n7 - Espeamos que goste do jogo e se divirta!");
var df, jn = "s", x;
while (jn.toLowerCase() == "sim" || jn.toLowerCase() == "s" || jn.toLowerCase() == "ss" || jn.toLowerCase() == "yup" || jn.toLowerCase() == "yes" || jn.toLowerCase() == "arra" || jn.toLowerCase() == "ãrrã" || jn.toLowerCase() == "arrã" || jn.toLowerCase() == "obv" || jn.toLowerCase() == "clr" || jn.toLowerCase() == "ctz" || jn.toLowerCase() == "selena gomez") {
  df = prompt("Escolha a dificuldade:\n1 - Fácil (tabuleiro 5x5, robô no centro, caixas ao redor do robô)\n2 - Médio (tabuleiro 7x7, robô no centro, caixas em lugares sorteados)\n3 - Difícil (tabuleiro 10x10, robô e caixas em lugares sorteados)");
  function fill_(m) {
    for (i = 0; i < (tm + 1); i++) {
      for (i2 = 0; i2 < (tm + 1); i2++) {
        m[i][i2] = "_";
      }
    }
    m[lR][cR] = "R";
    Position(m);
  } function caixa(m) {
    for (d = 1; d <= 4; d++) {
      c = Math.floor(Math.random() * (tm + 1));
      l = Math.floor(Math.random() * (tm + 1));
      var lp = l + 1, ln = l - 1, cp = c + 1, cn = c - 1;
      if (l < tm && l > 0 && c < tm && c > 0) {
        if (m[l][c] == "_" && m[ln][c] == "_" && m[lp][c] == "_" && m[l][cn] == "_" && m[l][cp] == "_") {
          m[l][c] = "C";
        } else {
          d--;
          continue;
        }
      } else {
        d--;
        continue;
      }
    }
  } function move(m) {
    x = prompt(tabuleiro(m) + "\n\nEscolha um lado para movimentar o robô (usando WASD ou 8462):")
    if (x.toUpperCase() == "W" || x == "8") {
      cima(m);
    } else if (x.toUpperCase() == "S" || x == "2") {
      baixo(m);
    } else if (x.toUpperCase() == "A" || x == "4") {
      esquerda(m);
    } else if (x.toUpperCase() == "D" || x == "6") {
      direita(m);
    } else if (x != "" && x.toLowerCase() != "sair") {
      alert("Movimento inválido.");
      cm--;
    }
  } function baixo(m) {
    if (lR < tm) {
      if (lR < (tm - 1) && m[(lR + 1)][cR] == "C" && m[(lR + 2)][cR] != "C") {
        m[(lR + 2)][cR] = "C";
        m[(lR + 1)][cR] = "R";
        m[lR][cR] = "_";
        lR++;
      } else if (m[(lR + 1)][cR] != "C") {
        m[(lR + 1)][cR] = "R";
        m[lR][cR] = "_";
        lR++;
      } else if (lR >= (tm - 1) || m[(lR + 2)][cR] == "C") {
        alert("Movimento inválido.");
        cm--;
      }
    } else {
      cm--;
      alert("Movimento inválido.");
    }
  } function cima(m) {
    if (lR > 0) {
      if (lR > 1 && m[(lR - 1)][cR] == "C" && m[(lR - 2)][cR] != "C") {
        m[(lR - 2)][cR] = "C";
        m[(lR - 1)][cR] = "R";
        m[lR][cR] = "_";
        lR--;
      } else if (m[(lR - 1)][cR] != "C") {
        m[(lR - 1)][cR] = "R";
        m[lR][cR] = "_";
        lR--;
      } else if (lR <= 1 || m[(lR - 2)][cR] == "C") {
        alert("Movimento inválido.");
        cm--;
      }
    } else {
      alert("Movimento inválido.");
      cm--;
    }
  } function esquerda(m) {
    if (cR > 0) {
      if (cR > 1 && m[lR][(cR - 1)] == "C" && m[lR][(cR - 2)] != "C") {
        m[lR][(cR - 2)] = "C";
        m[lR][(cR - 1)] = "R";
        m[lR][cR] = "_";
        cR--;
      } else if (m[lR][(cR - 1)] != "C") {
        m[lR][(cR - 1)] = "R";
        m[lR][cR] = "_";
        cR--;
      } else if (cR <= 1 || m[lR][(cR - 2)] == "C") {
        alert("Movimento inválido.");
        cm--;
      }
    } else {
      alert("Movimento inválido.");
      cm--;
    }
  } function direita(m) {
    if (cR < tm) {
      if (cR < (tm - 1) && m[lR][(cR + 1)] == "C" && m[lR][(cR + 2)] != "C") {
        m[lR][(cR + 2)] = "C";
        m[lR][(cR + 1)] = "R";
        m[lR][cR] = "_";
        cR++;
      } else if (m[lR][(cR + 1)] != "C") {
        m[lR][(cR + 1)] = "R";
        m[lR][cR] = "_";
        cR++;
      } else if (cR >= (tm - 1) || m[lR][(cR + 2)] == "C") {
        alert("Movimento inválido.");
        cm--;
      }
    } else {
      alert("Movimento inválido.");
      cm--;
    }
  } function Position(m) {
    if (m[0][0] != "R" && m[0][0] != "C") {
      m[0][0] = "P";
    } if (m[0][tm] != "R" && m[0][tm] != "C") {
      m[0][tm] = "P";
    } if (m[tm][0] != "R" && m[tm][0] != "C") {
      m[tm][0] = "P";
    } if (m[tm][tm] != "R" && m[tm][tm] != "C") {
      m[tm][tm] = "P";
    }
  } function vencer(m) {
    if (m[0][0] == "C" && m[0][tm] == "C" && m[tm][0] == "C" && m[tm][tm] == "C") {
      jn = prompt("Parabéns, você venceu com " + cm + " jogadas! Quer jogar novamente?");
    }
  } function jogar(m) {
    for (cm = 0; m[0][0] != "C" || m[0][tm] != "C" || m[tm][0] != "C" || m[tm][tm] != "C"; cm++) {
      move(m);
      if (x == "" || x.toLowerCase() == "sair") {
        break;
      }
      Position(m);
      if (perder(m) != 0) {
        break;
      } else {
        continue;
      }
    }
  } function perder(m) {
    var a = m[0].indexOf("C"), a2 = m[tm].indexOf("C"), tf = 0;
    for (aux = 0; aux < tm && tf == 0; aux++) {
      if ((m[aux][0] == "C" && m[(aux + 1)][0] == "C") || (m[aux][tm] == "C" && m[(aux + 1)][tm] == "C")) {
        jn = prompt("Você perdeu pois não há mais como você vencer! Quer jogar novamente?");
        tf++;
      }
    }
    if ((m[0][(a + 1)] == "C" || m[tm][(a2 + 1)] == "C") && tf == 0) {
      jn = prompt("Você perdeu pois não há mais como você vencer! Quer jogar novamente?");
      tf++;
    }
    return tf;
  }
  if (df == "1" || df.toLowerCase() == "fácil" || df.toLowerCase() == "facil") {
    function tabuleiro(m) {
      var s = "|_" + m[0].join("_|_") + "_|\n|_" + m[1].join("_|_") + "_|\n|_" + m[2].join("_|_") + "_|\n|_" + m[3].join("_|_") + "_|\n|_" + m[4].join("_|_") + "_|";
      return s;
    }
    var m = [["P", "_", "_", "_", "P"], ["_", "_", "C", "_", "_"], ["_", "C", "R", "C", "_"], ["_", "_", "C", "_", "_"], ["P", "_", "_", "_", "P"]], c, l, lR = 2, cR = 2, tm = 4;
    jogar(m);
  }
  if (df == "2" || df.toLowerCase() == "médio" || df.toLowerCase() == "medio") {
    function tabuleiro(m) {
      var s = "|_" + m[0].join("_|_") + "_|\n|_" + m[1].join("_|_") + "_|\n|_" + m[2].join("_|_") + "_|\n|_" + m[3].join("_|_") + "_|\n|_" + m[4].join("_|_") + "_|\n|_" + m[5].join("_|_") + "_|\n|_" + m[6].join("_|_") + "_|";
      return s;
    }
    var m = [[], [], [], [], [], [], []], c, l, lR = 4, cR = 4, tm = 6;
    fill_(m);
    caixa(m);
    jogar(m);
  }
  if (df == "3" || df.toLowerCase() == "difícil" || df.toLowerCase() == "dificil") {
    function tabuleiro(m) {
      var s = "|_" + m[0].join("_|_") + "_|\n|_" + m[1].join("_|_") + "_|\n|_" + m[2].join("_|_") + "_|\n|_" + m[3].join("_|_") + "_|\n|_" + m[4].join("_|_") + "_|\n|_" + m[5].join("_|_") + "_|\n|_" + m[6].join("_|_") + "_|\n|_" + m[7].join("_|_") + "_|\n|_" + m[8].join("_|_") + "_|\n|_" + m[9].join("_|_") + "_|";
      return s;
    }
    var m = [[], [], [], [], [], [], [], [], [], [], []], c, l, lR = Math.floor(Math.random() * 10), cR = Math.floor(Math.random() * 10), tm = 9;
    fill_(m);
    caixa(m);
    jogar(m);
  }
  vencer(m);
  if (x == "") {
    jn = prompt("Deseja reiniciar o jogo?");
  } else if (x.toLowerCase() == "sair") {
    jn = prompt("Deseja continuar no jogo?");
  }
}
alert("Esperamos que tenha gostado do jogo! Obrigado por jogar!");
